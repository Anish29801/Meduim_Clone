generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// User roles
enum Role {
  USER
  ADMIN
  SUBADMIN
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @db.VarChar(255) @unique
  email     String    @db.VarChar(255) @unique
  password  String
  fullName  String?   @db.MediumText
  bio       String?   @db.VarChar(200)
  avatar    String?
  gender    String?
  role      Role      @default(USER)

  bookmarks Article[] @relation("Bookmarks")        // Many-to-many
  articles  Article[] @relation("UserArticles")     // One-to-many authored articles
  comments  Comment[]                               

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Article {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(255)
  content     String    @db.LongText
  coverImage  String?
  claps       Int       @default(0)
  views       Int       @default(0)

  categoryId  Int?
  category    Category? @relation(fields: [categoryId], references: [id])

  authorId    Int
  author      User      @relation("UserArticles", fields: [authorId], references: [id])

  comments    Comment[]
  bookmarkedBy User[]    @relation("Bookmarks")
  tags        Tag[]      @relation("ArticleTags")  // Many-to-many tags

  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Comment {
  id        Int       @id @default(autoincrement())
  content   String
  articleId Int
  userId    Int
  parentId  Int?      // nullable for top-level comments
  likes     Int       @default(0)
  createdAt DateTime  @default(now())

  article   Article   @relation(fields: [articleId], references: [id])
  user      User      @relation(fields: [userId], references: [id])
  replies   Comment[] @relation("CommentReplies")   // only relation name here
  parent    Comment?  @relation("CommentReplies", fields: [parentId], references: [id])
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255) @unique
  articles  Article[] // One-to-many relation
}

model Tag {
  id        Int       @id @default(autoincrement())
  name      String    @unique @db.VarChar(100)
  articles  Article[] @relation("ArticleTags")
}
