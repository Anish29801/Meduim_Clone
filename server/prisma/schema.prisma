generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  username String  @unique
  email    String  @unique
  password String
  fullName String?
  bio      String? @db.VarChar(200)
  avatar   String?
  gender   String?
  isAdmin  Boolean @default(false)

  // Relations
  bookmarks Article[] @relation("Bookmarks") // Many-to-many
  articles  Article[] @relation("UserArticles") // One-to-many authored articles
  comments  Comment[] // One-to-many comments

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Article {
  id         Int       @id @default(autoincrement())
  title      String
  content    String
  coverImage String?
  tags       String[]
  categoryId Int?
  category   Category? @relation(fields: [categoryId], references: [id])
  claps      Int       @default(0)
  views      Int       @default(0)

  authorId Int
  author   User @relation("UserArticles", fields: [authorId], references: [id])

  comments     Comment[]
  bookmarkedBy User[]    @relation("Bookmarks") // Many-to-many

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  articleId Int
  userId    Int
  parentId  Int?
  likes     Int      @default(0)
  createdAt DateTime @default(now())

  article Article @relation(fields: [articleId], references: [id])
  user    User    @relation(fields: [userId], references: [id])
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  articles Article[] // One-to-many relation
}
